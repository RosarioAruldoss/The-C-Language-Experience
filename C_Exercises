Hey, in here we are trying to do an exercise in which, we will be building a pyramid using the '#' bricks. For starters, the bricks can be aligned from left to right as that is considered easy.

we are trying to simplify the task in hand. Lets see if we can incorporate it with simple steps.

Step 1 : Get the input from the user for no of rows
Step 2 : Print bricks - '#' with one brick on row 1 till the no of bricks as the input from the user on the n'th row.

#include <stdio.h>
#include <cs50.h>
void print_row (int b);
int main (void)
{
    //getting the input from the user.
    int a = get_int("Say the no of rows you want the brick pyramid : ");
    print_row(4);
}

void print_row (int b)
{
    for(int i = 0; i<b; i++)
    {
    printf("#");
    }
}

In this code it is printing out only 4 bricks in row one and nothing else.

#include <stdio.h>
#include <cs50.h>
void print_row (int b);
int main (void)
{
    //getting the input from the user.
    int a = get_int("Say the no of rows you want the brick pyramid : ");
    //instead of using the print_row function, we can use the for loop to use the function as per the user input (a)
    for(int i=0; i<a; i++)
    {
        print_row(a); //changing the integer(Random number) to the user input (a)
    }
}

void print_row (int b)
{
    for(int i = 0; i<b; i++)
    {
    printf("#");
    }
    printf("\n"); //making a new line to make the bricks print in multiple rows as per the user input (a)
}
//when the for loop is used in the first function, the result we get is bricks printed for the user input (a) for the same number of rows.
//  Thus we get struck. We think that the only varibale that can be changed is the user input . But that too kinf of gives us a brick wall
// intead of a pyramid. In the next iteration in order to make the code more dynamic, we will use the variable that changes with every for
// loop execution and that is - 'i'.
*/
#include <stdio.h>
#include <cs50.h>
void print_row (int b);
int main (void)
{
    //getting the input from the user.
    int a = get_int("Say the no of rows you want the brick pyramid : ");
    //instead of using the print_row function, we can use the for loop to use the function as per the user input (a)
    for(int i=0; i<=a; i++) // making it <= makes the program to print the no of times as the user input.
    {
        print_row(i); //changing the integer-user input (a) to i variable.
    }
}

void print_row (int b)
{
    for(int i = 0; i<b; i++)
    {
    printf("#");
    }
    printf("\n"); //making a new line to make the bricks print in multiple rows as per the user input (a)
}

There is one more way to do the same:

#include <stdio.h>
#include <cs50.h>
void print_row (int b);
int main (void)
{
    //getting the input from the user.
    int a = get_int("Say the no of rows you want the brick pyramid : ");
    //instead of using the print_row function, we can use the for loop to use the function as per the user input (a)
    for(int i=0; i<a; i++) // making it <= makes the program to print the no of times as the user input.
    {
        print_row(i+1); //changing the integer-user input (a) to i variable.
        //adding +1 will make the program execute brick printing in row 0 itself once. Thus when we get to row 5 we have 4brick+1brick
    }
}

void print_row (int b)
{
    for(int i = 0; i<b; i++)
    {
    printf("#");
    }
    printf("\n"); //making a new line to make the bricks print in multiple rows as per the user input (a)
}


