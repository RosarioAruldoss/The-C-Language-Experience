# Conditional Statements in C

Conditional statements in C allow a program to make decisions and execute different code blocks based on specified conditions. These statements enable the control flow of a program based on logical conditions.

## 1. if Statement
The `if` statement executes a block of code only if a specified condition is true.

### Syntax:
```c
if (condition) {
    // Code to execute if condition is true
}
```

### Example:
```c
#include <stdio.h>
int main() {
    int num = 10;
    if (num > 0) {
        printf("The number is positive.\n");
    }
    return 0;
}
```

## 2. if-else Statement
The `if-else` statement executes one block of code if the condition is true, and another block if the condition is false.

### Syntax:
```c
if (condition) {
    // Code if condition is true
} else {
    // Code if condition is false
}
```

### Example:
```c
#include <stdio.h>
int main() {
    int num = -5;
    if (num > 0) {
        printf("The number is positive.\n");
    } else {
        printf("The number is negative or zero.\n");
    }
    return 0;
}
```

## 3. if-else if-else Statement
This statement allows multiple conditions to be checked sequentially.

### Syntax:
```c
if (condition1) {
    // Code if condition1 is true
} else if (condition2) {
    // Code if condition2 is true
} else {
    // Code if none of the above conditions are true
}
```

### Example:
```c
#include <stdio.h>
int main() {
    int num = 0;
    if (num > 0) {
        printf("The number is positive.\n");
    } else if (num < 0) {
        printf("The number is negative.\n");
    } else {
        printf("The number is zero.\n");
    }
    return 0;
}
```

## 4. Nested if Statement
An `if` statement inside another `if` statement is called a nested `if`.

### Syntax:
```c
if (condition1) {
    if (condition2) {
        // Code if both conditions are true
    }
}
```

### Example:
```c
#include <stdio.h>
int main() {
    int num = 5;
    if (num > 0) {
        if (num % 2 == 0) {
            printf("The number is positive and even.\n");
        } else {
            printf("The number is positive and odd.\n");
        }
    }
    return 0;
}
```

## 5. switch Statement
The `switch` statement is used to execute one block of code among many options based on a variable's value.

### Syntax:
```c
switch (variable) {
    case value1:
        // Code to execute if variable == value1
        break;
    case value2:
        // Code to execute if variable == value2
        break;
    default:
        // Code to execute if none of the cases match
}
```

### Example:
```c
#include <stdio.h>
int main() {
    int day = 3;
    switch (day) {
        case 1:
            printf("Monday\n");
            break;
        case 2:
            printf("Tuesday\n");
            break;
        case 3:
            printf("Wednesday\n");
            break;
        default:
            printf("Invalid day\n");
    }
    return 0;
}
```

## Conclusion
Conditional statements in C are fundamental for decision-making and controlling program flow. The `if`, `if-else`, `if-else if-else`, `nested if`, and `switch` statements are powerful tools that allo
